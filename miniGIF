#!/bin/bash

source ./utils/string.sh
source ./utils/locales.sh
source ./utils/ENV.sh

# The MIT License (MIT)

# Copyright (c) 2019 lolimay <lolimay@lolimay.cn>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

localize '\033[36m ❤ 欢迎使用\033[33m miniGIF\033[36m GIF压缩工具❤\n\033[0m' '\033[36m ❤ Welcome to use\033[33m miniGIF\033[36m gif compressor❤\n\033[0m'

# Install Dependencies
is_gifsicle_installed=`which gifsicle`
is_convert_installed=`which convert`

if [ -z "$is_gifsicle_installed" ];then
    localize '\033[32m[信息] 依赖 gifsicle 未安装，开始尝试为你自动安装...\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
    sudo apt install gifsicle -y
fi

if [ -z "$is_convert_installed" ];then
    localize '\033[32m[信息] 依赖 imagemagick 未安装，开始尝试为你自动安装...\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
    sudo apt install imagemagick -y
fi

if [ -z "$1" ];then
    localize '\033[31m[错误] 未指定需要压缩的GIF文件 \033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
    localize '使用方法: '$0' 图片名.gif' 'Usage: '$0' <gif-to-be-compressed>.gif'
    exit
fi

if [ ! -f "$1" ];then
    localize '\033[31m[错误] 指定的GIF文件不存在 \033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
    exit
fi

# check if this file is *.gif
file=`echo $1`
extension=`echo "${file##*.}"`
if [ ! str"$extension" = str"gif" ];then
    localize '\033[31m[错误] 指定的文件不是GIF文件 \033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
fi

# get original gif image size
original_size=`stat -c "%s" $1`
original_size_kb=`echo "scale=2; $original_size/1024" | bc`
original_size_mb=`echo "scale=2; $original_size/1048576" | bc`
original_size_mb_flag=`awk 'BEGIN{ print '$original_size_kb'>=1024 }'`
original_colorspace=`identify $1 | awk '{print $7}' | sed -n '1p' | tr -cd "[0-9]"`

localize '\033[32m[信息] \033[0m待压缩文件名: \033[32m'$1'\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'

if [ "$original_size_mb_flag" -eq 1 ];then
    localize '\033[32m[信息] \033[0m压缩前大小: \033[32m'$original_size_mb' MB\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
else
    localize '\033[32m[信息] \033[0m压缩前大小: \033[32m'$original_size_kb' KB\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
fi

localize '\033[32m[信息] \033[0m压缩前颜色深度: \033[32m'$original_colorspace' 位\033[32m\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'


# get colorspace
localize '\033[32m[信息]\033[0m 请输入压缩后的颜色深度(默认\033[4;35m64\033[0m):'
read output_colorspace

if [ -z "$output_colorspace" ];then
    output_colorspace="64"
fi

while [ "$output_colorspace" -gt "$original_colorspace" ]
do
    localize '\033[31m[错误]\033[0m 输入值不能大于当前颜色深度值'
    localize '\033[32m[信息]\033[0m 请重新输入压缩后的颜色深度(默认\033[4;35m64\033[0m):'
    read output_colorspace
done

localize '\033[32m[信息]\033[0m 正在压缩中，请稍后...'

gifsicle -O3 $1 --colors $output_colorspace -o $1 > /dev/null 2>&1
convert $1 -fuzz 20% -layers Optimize $1 > /dev/null 2>&1

localize '\033[32m[信息] \033[0m压缩后颜色深度为: \033[32m'$output_colorspace' 位\033[32m\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'

# get output gif image size
output_size=`stat -c "%s" $1`
output_size_kb=`echo "scale=2; $output_size/1024" | bc`
output_size_mb=`echo "scale=2; $output_size/1048576" | bc`
output_size_mb_flag=`awk 'BEGIN{ print '$output_size_kb'>=1024 }'`
compresions_rate=`echo "scale=2; 100*$output_size/$original_size" | bc`

echo $compresions_rate

if [ "$original_size_mb_flag" -eq 1 ];then
    localize '\033[32m[信息] \033[0m压缩后大小: \033[32m'$output_size_mb' MB\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
else
    localize '\033[32m[信息] \033[0m压缩后大小: \033[32m'$output_size_kb' KB\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'
fi

localize '\033[32m[信息] \033[0m压缩率为: \033[32m'$compresions_rate' %\033[32m\033[0m' 'Usage: '$0' <gif-to-be-compressed>.gif'